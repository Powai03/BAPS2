generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Utilisateur {
  id                 String  @id @default(uuid()) 
  nom                String?  // Facultatif pour les entreprises
  prenom             String?  // Facultatif pour les entreprises
  nomEntreprise      String?  // Facultatif pour les micro-entreprises
  email              String  @unique
  password           String  
  numero             String?
  telephone          String?
  adresse            String  @default("Inconnu")
  complementAdresse  String?
  codePostal         String  @default("00000")
  profession         String  @default("Inconnu")
  domaineActivite    String  @default("Inconnu")
  description        String? @db.Text
  siteWeb            String?
  logo               String?
  justificatif       String?  // Lien du fichier Cesu/Siren
  pieceIdentite      String?  // Lien du fichier de la pi√®ce d'identit√©
  role               RoleUtilisateur
  etatCreation       Boolean @default(false)
  etatModification   Boolean @default(false)
  etatJustificatif   Boolean @default(false)
  typeCompte         String  @default("auto-entrepreneur")
  typeInscription    String  @default("CESU")
  modifications      Modification[]
  images             Image[]
}

// üìå Enum pour les r√¥les des utilisateurs
enum RoleUtilisateur {
  AUTO_ENTREPRENEUR
  ENTREPRISE
  ADMIN
}

model Modification {
  id               String   @id @default(uuid())
  utilisateurId    String   
  utilisateur      Utilisateur @relation(fields: [utilisateurId], references: [id], onDelete: Cascade)
  nom             String?
  prenom          String?
  nomEntreprise   String?
  email           String?
  description    String?  @db.Text
  password        String?
  telephone       String?
  adresse         String?
  complementAdresse String?
  codePostal      String?
  siteWeb         String?
  etatValidation  Boolean  @default(false) // false = en attente, true = valid√©
  createdAt       DateTime @default(now())
}

model Image {
  id            String   @id @default(uuid())  
  utilisateurId String   
  utilisateur   Utilisateur @relation(fields: [utilisateurId], references: [id], onDelete: Cascade)
  url           String   // Lien de l'image
  type          String   // Exemple : "profil", "justificatif", etc.
  createdAt     DateTime @default(now())
}
